https://www.npmjs.com/package/v-mask
vhttps://jsfiddle.net/8kvracso/

// ----------------------------------------------------

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/v-mask/dist/v-mask.min.js"></script> 

<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>

// ----------------------------------------------------

 <div id="app">
      <input type="text"  v-mask="mask" v-model="inputVal"  :placeholder="placeholder" >
 </div>
  
// ----------------------------------------------------
Vue.use(VueMask.VueMaskPlugin);

new Vue({
  el: '#app',
  data: {
    mask: '+7 (###) ### ## ##',
    placeholder: 'phone number',
    inputVal: '',
  }
})          


 let header = document.querySelector(".header")
      let box = document.querySelector(".categories__list")
            const rect = header.getBoundingClientRect().bottom
            const rect2 = box.getBoundingClientRect().top

console.log(window.innerHeight)

// ----------------------------------------------------
import {useStore} from 'vuex'
export default {
  setup () { 
    const store = useStore() 

    onMounted(() => {
      store.dispatch("increment", inputScroll)
    }) 
  return {
      INCREMENT,
    }
  }
}
// ----------------
actions: {
    increment({commit}, payload){
      commit("increment",payload);
    },
},

state: { 
    categoryScroll:0
},

mutations: {
    increment (state, payload) {
      state.categoryScroll = payload
     },
},

getters: {
    INCREMENT: (state) => state.categoryScroll,
}
// ----------------
import {useStore} from 'vuex'
export default {
  setup () { 
    const store = useStore() 

    const INCREMENT = computed(() => store.getters.INCREMENT)
    onMounted(() => {
       console.log(INCREMENT.value)
    })
 
return {
      INCREMENT,
    }
 }
}
